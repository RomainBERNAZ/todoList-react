{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","className","value","type","onChange","e","target","required","onClick","preventDefault","text","completed","id","Math","random","alert","Todo","todo","filter","el","TodoList","map","App","useState","useEffect","getLocalTodos","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAoDeA,EAjDF,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,UAAWC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SA2B5C,OAGA,qBAAKC,UAAU,OAAf,SACE,iCACE,uBAAOC,MAAOL,EACPM,KAAK,OACLF,UAAU,aACVG,SAjCY,SAACC,GACxBP,EAAaO,EAAEC,OAAOJ,QAiCXK,UAAQ,IACf,wBAAQC,QAhCY,SAACH,GACzBA,EAAEI,iBAEgB,KAAdZ,EACFG,EAAS,GAAD,mBACHD,GADG,CACI,CACRW,KAAMb,EACNc,WAAY,EACZC,GAAoB,IAAhBC,KAAKC,aAKbC,MAAM,mCAIRjB,EAAa,KAgBDG,UAAU,cACVE,KAAK,SAFb,SAGE,mBAAGF,UAAU,+BCtBRe,EAlBF,SAAC,GAAqC,IAAnCN,EAAkC,EAAlCA,KAAMO,EAA4B,EAA5BA,KAAMlB,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAQ/B,OACI,sBAAKC,UAAU,OAAf,UACI,oBAAIA,UAAU,YAAd,SAA2BS,IAC3B,wBAASF,QARK,WAClBR,EAASD,EAAMmB,QAAO,SAACC,GAAD,OAAQA,EAAGP,KAAOK,EAAKL,QAONX,UAAU,YAA7C,SACI,mBAAGA,UAAU,uBCUdmB,EAtBE,SAAC,GAAuB,IAAtBrB,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAMtB,OAEI,qBAAKC,UAAU,iBAAf,SACI,oBAAIA,UAAU,YAAd,SACKF,EAAMsB,KAAI,SAAAJ,GAAI,OACX,cAAC,EAAD,CAAMP,KAAMO,EAAKP,KAEXX,MAAOA,EACPkB,KAAMA,EACNjB,SAAUA,GAHLiB,EAAKL,YCuCrBU,MAhDf,WAAgB,IAAD,EAGoBC,mBAAS,IAH7B,mBAGN1B,EAHM,KAGKC,EAHL,OAIayB,mBAAS,IAJtB,mBAINxB,EAJM,KAICC,EAJD,KAOfwB,qBAAW,WACTC,MACK,IAGPD,qBAAW,WACTE,MACI,CAAC3B,IAKP,IAAM2B,EAAiB,WACnBC,aAAaC,QAAQ,QAASC,KAAKC,UAAU/B,KAG3C0B,EAAgB,WACpB,GAAoC,OAAjCE,aAAaI,QAAQ,SACtBJ,aAAaC,QAAQ,QAASC,KAAKC,UAAU,SACzC,CACJ,IAAIE,EAAYH,KAAKI,MAAMN,aAAaI,QAAQ,UAChD/B,EAASgC,KAKb,OACA,sBAAK/B,UAAU,YAAf,UACI,+BAAI,qCAAJ,UAAyB,wCAE3B,cAAC,EAAD,CAAMJ,UAAWA,EACXC,aAAcA,EACdC,MAAOA,EACPC,SAAUA,IAEhB,cAAC,EAAD,CAAUD,MAAOA,EACPC,SAAUA,QCrCPkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.db2c2a4e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Form = ({ inputText, setInputText, todos, setTodos }) => {\r\n\r\n  const inputTextHandler = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n  const submitTodoHandler = (e) => {\r\n    e.preventDefault(); \r\n\r\n    if (inputText !== \"\") {\r\n      setTodos([\r\n        ...todos, {\r\n          text: inputText,\r\n          completed : false,\r\n          id: Math.random() * 1000\r\n        }\r\n      ]);\r\n\r\n    }  else {\r\n      alert(\"Le champ ne peut Ãªtre vide !\")\r\n    }\r\n\r\n    \r\n    setInputText(\"\");\r\n  };\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n    <div className=\"card\">\r\n      <form>\r\n        <input value={inputText} \r\n               type=\"text\" \r\n               className=\"todo-input\" \r\n               onChange={inputTextHandler} \r\n               required />\r\n        <button onClick={submitTodoHandler} \r\n                className=\"todo-button\" \r\n                type=\"submit\">\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n      </form>\r\n    </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Form; ","import React from 'react';\r\n\r\n\r\nconst Todo = ({ text, todo, todos, setTodos }) => {\r\n\r\n\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter((el) => el.id !== todo.id));\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className=\"todo-item\">{text}</li>\r\n            <button  onClick={ deleteHandler } className=\"trash-btn\"> \r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Todo from './Todo'\r\n\r\nconst TodoList = ({todos, setTodos}) => {\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {todos.map(todo => (\r\n                    <Todo text={todo.text}\r\n                          key={todo.id}\r\n                          todos={todos} \r\n                          todo={todo}\r\n                          setTodos={setTodos}/>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList; ","import React, { useState, useEffect } from 'react';\n\nimport '../src/scss/App.css';\nimport Form from './components/Form'\nimport TodoList from './components/TodoList';\n\nfunction App() {\n\n\n  const [inputText, setInputText] =useState(\"\");\n  const [todos, setTodos] = useState([]);\n\n// AU DEMMARAGE \nuseEffect (() => {\n  getLocalTodos();\n    }, []);\n\n//USE EFFECT\nuseEffect (() => {\n  saveLocalTodos();\n    },[todos]);\n\n\n\n// Sauvegarde en stockage local \nconst saveLocalTodos = () => {\n    localStorage.setItem('todos', JSON.stringify(todos))\n};\n\nconst getLocalTodos = () => {\n  if(localStorage.getItem('todos') ===null ){\n    localStorage.setItem('todos', JSON.stringify([]));\n  }else {\n    let todoLocal = JSON.parse(localStorage.getItem('todos'));\n    setTodos(todoLocal);\n  }\n};\n\n\nreturn (\n<div className=\"container\">\n    <h1><span>T</span>ODO LIS<span>T</span></h1>\n  \n  <Form inputText={inputText} \n        setInputText={setInputText}\n        todos={todos} \n        setTodos={setTodos}/>\n  \n  <TodoList todos={todos} \n            setTodos={setTodos}/>\n</div>\n);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}